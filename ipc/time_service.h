/*
 * This file is generated by gdbus-codegen, do not modify it.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from. Note that it links to GLib, so must comply with the
 * LGPL linking clauses.
 */

#ifndef __TIME_SERVICE_H__
#define __TIME_SERVICE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.example.TimeService */

#define TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE (time_service_com_example_time_service_get_type ())
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE, TimeServiceComExampleTimeService))
#define TIME_SERVICE_IS_COM_EXAMPLE_TIME_SERVICE(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE))
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE, TimeServiceComExampleTimeServiceIface))

struct _TimeServiceComExampleTimeService;
typedef struct _TimeServiceComExampleTimeService TimeServiceComExampleTimeService;
typedef struct _TimeServiceComExampleTimeServiceIface TimeServiceComExampleTimeServiceIface;

struct _TimeServiceComExampleTimeServiceIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get_time_of_day) (
    TimeServiceComExampleTimeService *object,
    GDBusMethodInvocation *invocation);

};

GType time_service_com_example_time_service_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *time_service_com_example_time_service_interface_info (void);
guint time_service_com_example_time_service_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void time_service_com_example_time_service_complete_get_time_of_day (
    TimeServiceComExampleTimeService *object,
    GDBusMethodInvocation *invocation,
    const gchar *current_time);



/* D-Bus method calls: */
void time_service_com_example_time_service_call_get_time_of_day (
    TimeServiceComExampleTimeService *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean time_service_com_example_time_service_call_get_time_of_day_finish (
    TimeServiceComExampleTimeService *proxy,
    gchar **out_current_time,
    GAsyncResult *res,
    GError **error);

gboolean time_service_com_example_time_service_call_get_time_of_day_sync (
    TimeServiceComExampleTimeService *proxy,
    gchar **out_current_time,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_PROXY (time_service_com_example_time_service_proxy_get_type ())
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_PROXY, TimeServiceComExampleTimeServiceProxy))
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_PROXY, TimeServiceComExampleTimeServiceProxyClass))
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_PROXY, TimeServiceComExampleTimeServiceProxyClass))
#define TIME_SERVICE_IS_COM_EXAMPLE_TIME_SERVICE_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_PROXY))
#define TIME_SERVICE_IS_COM_EXAMPLE_TIME_SERVICE_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_PROXY))

typedef struct _TimeServiceComExampleTimeServiceProxy TimeServiceComExampleTimeServiceProxy;
typedef struct _TimeServiceComExampleTimeServiceProxyClass TimeServiceComExampleTimeServiceProxyClass;
typedef struct _TimeServiceComExampleTimeServiceProxyPrivate TimeServiceComExampleTimeServiceProxyPrivate;

struct _TimeServiceComExampleTimeServiceProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  TimeServiceComExampleTimeServiceProxyPrivate *priv;
};

struct _TimeServiceComExampleTimeServiceProxyClass
{
  GDBusProxyClass parent_class;
};

GType time_service_com_example_time_service_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TimeServiceComExampleTimeServiceProxy, g_object_unref)
#endif

void time_service_com_example_time_service_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TimeServiceComExampleTimeService *time_service_com_example_time_service_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
TimeServiceComExampleTimeService *time_service_com_example_time_service_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void time_service_com_example_time_service_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
TimeServiceComExampleTimeService *time_service_com_example_time_service_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
TimeServiceComExampleTimeService *time_service_com_example_time_service_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_SKELETON (time_service_com_example_time_service_skeleton_get_type ())
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_SKELETON, TimeServiceComExampleTimeServiceSkeleton))
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_SKELETON, TimeServiceComExampleTimeServiceSkeletonClass))
#define TIME_SERVICE_COM_EXAMPLE_TIME_SERVICE_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_SKELETON, TimeServiceComExampleTimeServiceSkeletonClass))
#define TIME_SERVICE_IS_COM_EXAMPLE_TIME_SERVICE_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_SKELETON))
#define TIME_SERVICE_IS_COM_EXAMPLE_TIME_SERVICE_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TIME_SERVICE_TYPE_COM_EXAMPLE_TIME_SERVICE_SKELETON))

typedef struct _TimeServiceComExampleTimeServiceSkeleton TimeServiceComExampleTimeServiceSkeleton;
typedef struct _TimeServiceComExampleTimeServiceSkeletonClass TimeServiceComExampleTimeServiceSkeletonClass;
typedef struct _TimeServiceComExampleTimeServiceSkeletonPrivate TimeServiceComExampleTimeServiceSkeletonPrivate;

struct _TimeServiceComExampleTimeServiceSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  TimeServiceComExampleTimeServiceSkeletonPrivate *priv;
};

struct _TimeServiceComExampleTimeServiceSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType time_service_com_example_time_service_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (TimeServiceComExampleTimeServiceSkeleton, g_object_unref)
#endif

TimeServiceComExampleTimeService *time_service_com_example_time_service_skeleton_new (void);


G_END_DECLS

#endif /* __TIME_SERVICE_H__ */
